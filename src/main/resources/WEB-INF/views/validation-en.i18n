# validation-en.i18n

acme.validation.airport.code.message = Airport code must be three-uppercase-letter
acme.validation.airport.phone.message = Phone is not valid
acme.validation.airport.duplicated-code.message = An airport with the same code already exists
acme.validation.airline.repeated.message = An airline with the same IATA code already exists

# Student 1 Messages
acme.validation.manager.wrong-initials.message = Identifier number must start with the manager initials

acme.validation.flight.overlapping-legs.message = There are overlapping legs
acme.validation.flight.no-legs.message = Flight has no legs
acme.validation.flight.no-manager.message = Flight has no manager
acme.validation.flight.future-legs.message = Some legs are in the past

acme.validation.leg.flight-number-format.message = Must be composed of the airline's IATA code followed by four digits
acme.validation.leg.duplicated-number.message = A leg with the same flight number already exists
acme.validation.leg.wrong-scheduled-arrival.message = Scheduled arrival must be after scheduled departure
acme.validation.leg.wrong-flight-number.message = Flight number does not start with the airline IATA code
acme.validation.leg.same-airport.message = Arrival airport can't be the same as the departure airport
acme.validation.leg.scheduled-departure-future.message = Scheduled departure must be in the future
acme.validation.leg.aircraft-used.message = Aircraft is already assigned to other leg simultaneously

# Student 2 Messages
acme.validation.identifier.nullornotpattern.message = The identifier must not be null and must follow the correct pattern
acme.validation.identifier.notInitials.message = Identifier must start with initials of the user
acme.validation.identifier.repeated.message = There is already an entity with this code
acme.validation.userAcount.null.message = User Account and Identity must not be null
acme.validation.userName.null.message = User Name must be fullfilled
acme.validation.userSurname.null.message = User Surname must be fullfilled

acme.validation.promoteCode.notPattern.message = Promote Code must follow the correct pattern
acme.validation.promoteCode.notCurrentYear.message = Promote Code must include current year

acme.validation.locatorCode.notPattern.message = Locator Code must follow the correct pattern
acme.validation.lastNibble.notPattern.message = Last nibble must be composed of four numbers
acme.validation.passportNumber.notPattern.message = Passport number must follow the correct pattern

acme.validation.lastNibble.blank.message = Cannot publish a booking if last nibble is not set

acme.validation.noChoice = Must not be empty
customer.passenger.form.error.associatedBookings = Cannot delete a passenger associated with existing bookings

customer.validation.booking.form.error.noPassengers = There must be at least one passenger for publish a booking
customer.booking.form.error.publishPassengers = All passengers must be published before publishing a booking
customer.booking.form.error.existingPassengers = Cannot delete a booking with passengers associated

authenticated.customer.form.error.duplicateIdentifier = Duplicated Identifier

acme.validation.airline.code.message = Airline code must be three-uppercase-letter
acme.validation.airline.phone.message = The phone number must contain between 6 and 15 digits and may start with a '+' sign.

# Student 3 Messages
acme.validation.member.nullornotpattern.message = The identifier must not be null and must follow the correct pattern  
acme.validation.member.notInitials.message = The employee code must start with the user's initials  
acme.validation.member.repeated.message = A different entity already exists with this employeeCode:  
acme.validation.member.employeeCode.message=The employee code must start with 2 or 3 uppercase letters followed by exactly 6 digits
acme.validation.member.phoneNumber.message=Invalid format. Use 6 to 15 digits, optionally starting with a '+'

acme.validation.activityLog.wrongMoment.message = ActivityLog registrationMoment must be after the completion of leg 
acme.validation.FlightAssignment.memberNotAvailable.message = That member is not available, flightAssignment can not be created
acme.validation.FlightAssignment.memberHasIncompatibleLegs.message = That member has incompatible legs
acme.validation.FlightAssignment.hasPilot.message = That leg already has a pilot
acme.validation.FlightAssignment.hasCopilot.message = That leg already has a copilot
acme.validation.FlightAssignment.notValidLeg.message = That leg is not valid
acme.validation.FlightAssignment.pastLeg.message = Leg must be in the future
acme.validation.FlightAssignment.notPublishedLeg.message = Leg must be published
acme.validation.FlightAssignment.notValidMember.message = Invalid member


# Student 4 messages

acme.validation.trackingLog.incorrectIndicator.message = Resolution percentage can only be 100% if status is REJECTED or ACCEPTED
acme.validation.trackingLog.mustBePending.message = Status can only be PENDING if percentage isnt 100%
acme.validation.trackingLog.increasingPercentage.message = The percentage must increase since last tracking log 

# Student 5 Messages

acme.validation.maintenance-record.next-inspection.message = The next inspection due date must be in the future
acme.validation.license-number.not-matching-initials.message = The first two letters of the license number must match the technicianâ€™s initials
acme.validation.license-number.repeated.message = The technician's license number must be unique
acme.validation.registration-number.repeated.message = The aircraft's registration number must be unique
technician.maintenance-record.publish.published-tasks = To publish a maintenance record, it cannot have any unpublished tasks and should have at least one published task
technician.maintenance-record.publish.status = To publish a maintenance record, its status must be "COMPLETED"
acme.validation.technician.null.message = Technician cannot be null
acme.validation.license-number.notpattern.message = The license number must follow the pattern of 2 or 3 uppercase letters followed by 6 digits
acme.validation.phone-number.notpattern.message = The phone number must contain 6 to 15 digits, optionally prefixed with '+'

